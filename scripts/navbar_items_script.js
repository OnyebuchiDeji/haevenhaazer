/**
 * 
 * Date Created: Fri-7-June-2024
 * This is the date I moved it into its separate script file again.
 * 
 *  Major Update: Sat-22-June-2024
 * 
 * In this script much was changed.
 * Instead of loading the 'projects_list' template...
 * the contents are generated by JavaScript
 * 
*
 *  Steps to `loadProjectsListScript()`:
 *      1.   Get all projects
 *      2.   Find the project which the matching id
 *      3.   Copy the content
 *      4.   Put in the target area, of id="home_html"
 *      5.   Save the new content <-- mught not be important
 *  Here's a discovery:
 *  When the template content is gotten by id, its nodes/elements can
 *  be accessed using `.getElementById` and related methods...
 *  This is also demonstrated in the `theme_btn_script.js` and `navbar_btn_script.js`
 * 
 *  NOTE!   In the `loadProjectDetails()` function, the content gotten from the template HTML
 *  have to be copied using `importNode`.
 *  It causes a weird issue that causes each Project to dissapear ones it is clicked
 *  and calls this `loadProjectDetails()` function.
 * 
 *  Having done the above, I deleted the `ProjectListScript`
 *  
 *  
 */

var localStoreKey = "recentHomeContent";

var resourceDir = "../resources/";
// var currentProjectKey = "curProj";


function loadProjectDetails(callerId)
{  
    // console.log(callerId);
    // var all_projects = document.getElementsByClassName("project");
    var all_projs_templates_content = document.getElementById("projects-template").content;

    var source_element = all_projs_templates_content.getElementById(callerId);

    var copy = document.importNode(source_element, true);
    //  Get the Heading from its immediate parent:
    var heading_html = document.createElement("h3");
    heading_html.innerText += `
        ${source_element.parentElement.id.toUpperCase()} PROJECT
    `;

    var project_content = document.createElement("div");
    project_content.id = "project-content";

    project_content.appendChild(heading_html);
    project_content.appendChild(copy);
    // console.log(typeof source_element);
    // console.log(source_element);
    // console.log(typeof heading_html);


    var targetElement = document.getElementById("home_html");

    targetElement.innerHTML = "";

    targetElement.appendChild(project_content);

    localStorage.setItem(localStoreKey, targetElement.innerHTML);
    //  Store 
    // localStorage.setItem(projectDetailsId, callerId);
}

var NavItemsScript = function()
{
    /**
     *  This function loads the corresponding content for every navbar item that is clicked.
     *  Hence it needs to get them by class name.
     *  It then checks if the name of the caller navbar matches the templateLoadedSource.
     */
    this.loadContent =  function (navbarItemName)
    {
        var templateLoadSources = document.getElementsByClassName("load-source");
        var done = false;
        // console.log(templateLoadSources);
        //  For every template source
        for (var i=0; i < templateLoadSources.length; i++){
            //  Get id
            var id = templateLoadSources[i].id;

            //  Check if id has this navbarItem's name
            if (id.includes(navbarItemName.toLowerCase())){
                //  Copy its content
                var template_content = templateLoadSources[i].content;
                var templateContentCopy = document.importNode(template_content, true);
                var targetElement = document.getElementById("home_html");
                
                //  Remove any innerhtml currently there
                if (targetElement.hasChildNodes()){
                    //  M1: Needs Array.from() else it doesn't remove any child nodes
                    Array.from(targetElement.childNodes).forEach((child)=>{
                        targetElement.removeChild(child);
                    });
                    
                    //  M2: Normal iteration
                    /*for (var i = targetElement.childNodes.length; i >= 0; i--){
                        targetElement.removeChild(targetElement.childNodes[i]);
                    }*/
    
                    //  M3: Works perfectly
                    //targetElement.innerHTML = "";
                }
    
                if (navbarItemName.toLowerCase() != "projects"){
                    targetElement.appendChild(templateContentCopy);
                    done = true;
                }
                else{
                    
                    //  Store the HTML to be added to the target area
                    var category_project_html = `
                    `;
                    
                    for (var i=0; i < templateContentCopy.childNodes.length; i++){
                        // console.log("First Outer");
                        var node =templateContentCopy.childNodes[i];
                        
                        if (node.id == undefined){
                            continue;
                        }
                        // console.log("Length: " + templateContentCopy.childNodes.length);
                        // console.log("Node Id: " + node.id);
                        
                        if (node.id == "projects-content"){
                            var categories_length = node.childNodes.length;

                            for (var j=0; j<categories_length; j++){
                                // console.log("Second Outer");
                                var category = node.childNodes[j];
                                if (category.id == undefined){
                                    continue;   //  Skip loop
                                }
                                //  Else, continue current execution
                                // console.log("Length: " + categories_length);
                                // console.log(category.id);

                                var projects_html = ``;

                                var projects_length = category.childNodes.length;
                                
                                if (projects_length > 0){
                                    for (var k=0; k < projects_length; k++){
                                        // console.log("To Last Inner");
                                        var project = category.childNodes[k];
                                        var elements_length = project.childNodes.length;
                                        if (elements_length > 0){
                                            for (var l=0; l<elements_length; l++){
                                                // console.log("Last Inner");
                                                var element = project.childNodes[l];
                                                if (element.id == "main_image"){
                                                    // console.log(element.innerHTML);
                                                    var mainImageInnerhtml = element.innerHTML;
                                                    // category_html += element
                                                }
                                                if (element.className == "briefing"){
                                                    // console.log(element.innerHTML);
                                                    var briefingInnerhtml = element.innerHTML;
                                                }
                                                if (element.className == "title"){
                                                    // console.log("Tag Name:" + element.tagName);
                                                    var titleInnerhtml = element.innerHTML;
                                                }
                                            }
                                            //  After getting the main and briefing html
                                            //  add them 
                                            projects_html += `
                                                <div class="project">
                                                <div id="${project.id}" onclick="loadProjectDetails(this.id)">
                                                ${mainImageInnerhtml}
                                                </div>
                                                ${titleInnerhtml}
                                                ${briefingInnerhtml}
                                                </div>
                                            `;
                                        }
                                    }
                                    category_project_html += `
                                    <h3>${category.id.toUpperCase()}</h3>
                                    <div class="projects_list">
                                        ${projects_html}
                                    </div>
                                    `;
                                }
                            }
                        }
                        category_project_html = `
                            <div id="projects-content">
                                ${category_project_html}
                            </div>
                        `;
                        // console.log(category_html);
                        // targetElement.appendChild(category_html);
                        targetElement.innerHTML += category_project_html;
                    }
                    // console.log(templateContentCopy);
                }

                localStorage.setItem(localStoreKey, targetElement.innerHTML);
                // console.log("Current Content:\n" + localStorage.getItem(localStoreKey));
                //    console.log("Done!");

                done = true;
            }
            
            if (done){
                break;  //  Once found and done, immediately break from loop
            }
        }
    }
    
    this.loadContent_v2 =  function (navbarItemName)
    {
        var templateLoadSources = document.getElementsByClassName("load-source");
        var done = false;

        //  For every template source
        for (var i=0; i < templateLoadSources.length; i++){
            //  Get id
            var id = templateLoadSources[i].id;

            //  Check if id has this navbarItem's name
            if (id.includes(navbarItemName.toLowerCase())){
                
                //  Get the template content this way
                //  So that one can use .getElement<>() and such
                //  to get the required nodes and elements.
                var template_content = document.getElementById(id).content;
                /**
                 * Pree that when a templat is gotten using `.getElementById()
                 * one can now use `querySelector` and `getELemenetById()`
                 * to get child nodes.
                 * But `getElementsByClassName()`doesn't work.`
                 * Hence I loop through their appropriate childNodes.
                 */
                // console.log(template_content);
                // console.log(template_content.querySelector(".project_category"));

                var targetElement = document.getElementById("home_html");

                //  Remove any innerhtml currently there
                if (targetElement.hasChildNodes()){
                    //  M1: Needs Array.from() else it doesn't remove any child nodes
                    Array.from(targetElement.childNodes).forEach((child)=>{
                        targetElement.removeChild(child);
                    });
                }

                
                if (navbarItemName.toLowerCase() != "projects"){
                    var templateContentCopy = document.importNode(template_content, true);
                    targetElement.appendChild(templateContentCopy);
                    done = true;
                }
                else{   //  Only for projects

                    //  Store the HTML to be added to the target area
                    var category_project_html = `
                    `;
                    
                    /**
                    *  console.log(projects_length);
                    *  It will be seen that the number of projects is more than
                    *  the actual, most likely because of some weird #text element
                    *  So quell it by checking the id as below.
                    */
                    var project_content = document.importNode(template_content.getElementById("projects-content"), true);

                    categories_length = project_content.childNodes.length;
                    // console.log(categories_length);

                    //  For every category
                    for (cat_id=0; cat_id<categories_length; cat_id++){
                        var current_category_id = project_content.childNodes[cat_id].id;
                        if (current_category_id == undefined){
                            continue;
                        }
                        // console.log(current_category_id);
                        var current_category = document.importNode(template_content.getElementById(current_category_id), true);
                        // console.log(current_category);

                        var projects_html = ``;
                        var projects_length = current_category.childNodes.length;

                        //  For every project of that category
                        // console.log(projects_length);
                        for (proj_id = 0; proj_id < projects_length; proj_id++){
                            var current_proj_id = current_category.childNodes[proj_id].id;
                            if (current_proj_id == undefined){
                                continue;
                            }
                            
                            // console.log(current_proj_id);

                            //  Needs to be copy from template
                            //  because I access their child nodes
                            //  and later add
                            var current_project = document.importNode(template_content.getElementById(current_proj_id), true);
                            // console.log(current_project);

                            //  Can't get by class name so have to iterate through elements in project div
                            var elements_size = current_project.childNodes.length;
                            // console.log(elements_size);

                            for (var ele_id=0; ele_id < elements_size; ele_id++){
                                var current_element = current_project.childNodes[ele_id];
                                
                                if (current_element.id == "main_image"){
                                    var mainImageInnerhtml = current_element.innerHTML;
                                }
                                if (current_element.className == "briefing"){
                                    var briefingInnerhtml = current_element.innerHTML;
                                }
                                if (current_element.className == "title"){
                                    var titleInnerhtml = current_element.innerHTML;
                                }
                            }
                            //  For each project of a category
                            projects_html += `
                                <div class="project">
                                <div id="${current_proj_id}" onclick="loadProjectDetails(this.id)">
                                ${mainImageInnerhtml}
                                </div>
                                ${titleInnerhtml}
                                ${briefingInnerhtml}
                                </div>
                            `;
                        }
                        //  For each category
                        category_project_html += `
                            <h3>${current_category_id.toUpperCase()}</h3>
                            <div class="projects_list">
                            ${projects_html}
                            </div>
                        `;
                    }
                    //  Finally
                    category_project_html = `
                        <div id="projects-content">
                            ${category_project_html}
                        </div>
                    `;
                    targetElement.innerHTML += category_project_html;
                    localStorage.setItem(localStoreKey, targetElement.innerHTML);
                    done=true;
                }
                //  If the processes for the navitem that was clicked 
                //  are done, break.
                if (done){
                    break;
                }
            }
            
        }
    }
    
    this.registerNavbarItemsClickEvent = function() 
    {
        var navbarItems = document.getElementsByClassName("navbar-item");
        for (var i=0; i < navbarItems.length; i++){
            // console.log(navbarItems[i].innerText);
    
            navbarItems[i].onclick = (event)=>{
                // console.log(event.target.innerText);
                this.loadContent_v2(event.target.innerText);
            };
        }
    }
};